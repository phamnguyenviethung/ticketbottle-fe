/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutMainLayoutImport } from './routes/_layout/_main-layout'
import { Route as LayoutAuthLayoutImport } from './routes/_layout/_auth-layout'
import { Route as LayoutAuthLayoutAuthLoginImport } from './routes/_layout/_auth-layout/auth/login'

// Create Virtual Routes

const LayoutMainLayoutIndexLazyImport = createFileRoute(
  '/_layout/_main-layout/',
)()

// Create/Update Routes

const LayoutMainLayoutRoute = LayoutMainLayoutImport.update({
  id: '/_layout/_main-layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutAuthLayoutRoute = LayoutAuthLayoutImport.update({
  id: '/_layout/_auth-layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutMainLayoutIndexLazyRoute = LayoutMainLayoutIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutMainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/_main-layout/index.lazy').then((d) => d.Route),
)

const LayoutAuthLayoutAuthLoginRoute = LayoutAuthLayoutAuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => LayoutAuthLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout/_auth-layout': {
      id: '/_layout/_auth-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_main-layout': {
      id: '/_layout/_main-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutMainLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_main-layout/': {
      id: '/_layout/_main-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutMainLayoutIndexLazyImport
      parentRoute: typeof LayoutMainLayoutImport
    }
    '/_layout/_auth-layout/auth/login': {
      id: '/_layout/_auth-layout/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof LayoutAuthLayoutAuthLoginImport
      parentRoute: typeof LayoutAuthLayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutAuthLayoutRouteChildren {
  LayoutAuthLayoutAuthLoginRoute: typeof LayoutAuthLayoutAuthLoginRoute
}

const LayoutAuthLayoutRouteChildren: LayoutAuthLayoutRouteChildren = {
  LayoutAuthLayoutAuthLoginRoute: LayoutAuthLayoutAuthLoginRoute,
}

const LayoutAuthLayoutRouteWithChildren =
  LayoutAuthLayoutRoute._addFileChildren(LayoutAuthLayoutRouteChildren)

interface LayoutMainLayoutRouteChildren {
  LayoutMainLayoutIndexLazyRoute: typeof LayoutMainLayoutIndexLazyRoute
}

const LayoutMainLayoutRouteChildren: LayoutMainLayoutRouteChildren = {
  LayoutMainLayoutIndexLazyRoute: LayoutMainLayoutIndexLazyRoute,
}

const LayoutMainLayoutRouteWithChildren =
  LayoutMainLayoutRoute._addFileChildren(LayoutMainLayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutMainLayoutRouteWithChildren
  '/': typeof LayoutMainLayoutIndexLazyRoute
  '/auth/login': typeof LayoutAuthLayoutAuthLoginRoute
}

export interface FileRoutesByTo {
  '': typeof LayoutAuthLayoutRouteWithChildren
  '/': typeof LayoutMainLayoutIndexLazyRoute
  '/auth/login': typeof LayoutAuthLayoutAuthLoginRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout/_auth-layout': typeof LayoutAuthLayoutRouteWithChildren
  '/_layout/_main-layout': typeof LayoutMainLayoutRouteWithChildren
  '/_layout/_main-layout/': typeof LayoutMainLayoutIndexLazyRoute
  '/_layout/_auth-layout/auth/login': typeof LayoutAuthLayoutAuthLoginRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/auth/login'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/' | '/auth/login'
  id:
    | '__root__'
    | '/_layout/_auth-layout'
    | '/_layout/_main-layout'
    | '/_layout/_main-layout/'
    | '/_layout/_auth-layout/auth/login'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutAuthLayoutRoute: typeof LayoutAuthLayoutRouteWithChildren
  LayoutMainLayoutRoute: typeof LayoutMainLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutAuthLayoutRoute: LayoutAuthLayoutRouteWithChildren,
  LayoutMainLayoutRoute: LayoutMainLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout/_auth-layout",
        "/_layout/_main-layout"
      ]
    },
    "/_layout/_auth-layout": {
      "filePath": "_layout/_auth-layout.tsx",
      "children": [
        "/_layout/_auth-layout/auth/login"
      ]
    },
    "/_layout/_main-layout": {
      "filePath": "_layout/_main-layout.tsx",
      "children": [
        "/_layout/_main-layout/"
      ]
    },
    "/_layout/_main-layout/": {
      "filePath": "_layout/_main-layout/index.lazy.tsx",
      "parent": "/_layout/_main-layout"
    },
    "/_layout/_auth-layout/auth/login": {
      "filePath": "_layout/_auth-layout/auth/login.tsx",
      "parent": "/_layout/_auth-layout"
    }
  }
}
ROUTE_MANIFEST_END */
